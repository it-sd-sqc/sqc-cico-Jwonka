Use `./build.sh` to build CiCo and `./run.sh` to run it if using the command line. You can otherwise use your IDE to build and run CiCo.

# Module 2: Sample test for the happy path. 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The status panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Sample test for invalid card numbers.

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The error panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Help users recognize, diagnose, and recover from errors

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.

## Expected results
* The panel should display "Please show your card to staff to validate." after step 2.

# Module 2: Help and documentation

## Test steps
1. Build and run CiCo.

## Expected results
* The version number should be displayed after "CiCo" at the bottom.

**********************************************************************************
# Module 3: Visibility of system status 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait for status panel to close.
4. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Checked IN" after step 2.
* Should display "Checked OUT" after step 4.

# Module 3: Match between system and the real world

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Developer" for the user name.

**********************************************************************************
# Module 4: Only accepting numeric input

## Test steps
1. Build and run CiCo.
2. Enter abcd into the field. The field displays the characters.

## Expected results
* Should ignore non-numerical input.

# Module 4: Only accepting correct length of input

## Test steps
1. Build and run CiCo.
2. Enter 000000000 into the field.

## Expected results
* Should ignore input that is not the correct length.

**********************************************************************************
# Module 5: Bypass timeout after card scan

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display a button to bypass timeout.

# Module 5: close application when window is closed

## Test steps
1. Build and run Cico.
2. Close the window.

## Expected results
* Should close application when window is closed.

# Module 6: Aesthetic and minimalist design
## Test steps
1. Build and run CiCo
2. View updated color scheme

## Expected results
* The main panel background color will be nobel gray and the scan box color will be silver.
* The status panel background color will be whitesmoke.
* Letters will be black font.

